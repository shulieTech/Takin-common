/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package io.shulie.takin.pinpoint.thrift.dto;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2023-06-15")
public class TStressTestAgentHeartbeatData implements org.apache.thrift.TBase<TStressTestAgentHeartbeatData, TStressTestAgentHeartbeatData._Fields>, java.io.Serializable, Cloneable, Comparable<TStressTestAgentHeartbeatData> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TStressTestAgentHeartbeatData");

  private static final org.apache.thrift.protocol.TField AGENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("agentId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField SIMULATOR_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("simulatorVersion", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField APP_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("appName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PID_FIELD_DESC = new org.apache.thrift.protocol.TField("pid", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField AGENT_LANGUAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("agentLanguage", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField AGENT_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("agentStatus", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField JVM_ARGS_CHECK_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmArgsCheck", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField JDK_FIELD_DESC = new org.apache.thrift.protocol.TField("jdk", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField JVM_ARGS_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmArgs", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField ENV_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("envCode", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField HOST_FIELD_DESC = new org.apache.thrift.protocol.TField("host", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField AGENT_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("agentVersion", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField TENANT_APP_KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("tenantAppKey", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField SERVICE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("serviceName", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField MD5_FIELD_DESC = new org.apache.thrift.protocol.TField("md5", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.BOOL, (short)19);
  private static final org.apache.thrift.protocol.TField MODULE_LOAD_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("moduleLoadResult", org.apache.thrift.protocol.TType.BOOL, (short)20);
  private static final org.apache.thrift.protocol.TField ERROR_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("errorCode", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField ERROR_MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("errorMsg", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField PORT_FIELD_DESC = new org.apache.thrift.protocol.TField("port", org.apache.thrift.protocol.TType.I32, (short)23);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TStressTestAgentHeartbeatDataStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TStressTestAgentHeartbeatDataTupleSchemeFactory();

  private @org.apache.thrift.annotation.Nullable java.lang.String agentId; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String simulatorVersion; // optional
  private @org.apache.thrift.annotation.Nullable java.lang.String address; // optional
  private @org.apache.thrift.annotation.Nullable java.lang.String appName; // required
  private int pid; // optional
  private @org.apache.thrift.annotation.Nullable java.lang.String agentLanguage; // optional
  private long userId; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String agentStatus; // optional
  private @org.apache.thrift.annotation.Nullable java.lang.String jvmArgsCheck; // optional
  private @org.apache.thrift.annotation.Nullable java.lang.String jdk; // optional
  private @org.apache.thrift.annotation.Nullable java.lang.String jvmArgs; // optional
  private @org.apache.thrift.annotation.Nullable java.lang.String envCode; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String host; // optional
  private @org.apache.thrift.annotation.Nullable java.lang.String name; // optional
  private @org.apache.thrift.annotation.Nullable java.lang.String agentVersion; // optional
  private @org.apache.thrift.annotation.Nullable java.lang.String tenantAppKey; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String serviceName; // optional
  private @org.apache.thrift.annotation.Nullable java.lang.String md5; // optional
  private boolean status; // required
  private boolean moduleLoadResult; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String errorCode; // optional
  private @org.apache.thrift.annotation.Nullable java.lang.String errorMsg; // optional
  private int port; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    AGENT_ID((short)1, "agentId"),
    SIMULATOR_VERSION((short)2, "simulatorVersion"),
    ADDRESS((short)3, "address"),
    APP_NAME((short)4, "appName"),
    PID((short)5, "pid"),
    AGENT_LANGUAGE((short)6, "agentLanguage"),
    USER_ID((short)7, "userId"),
    AGENT_STATUS((short)8, "agentStatus"),
    JVM_ARGS_CHECK((short)9, "jvmArgsCheck"),
    JDK((short)10, "jdk"),
    JVM_ARGS((short)11, "jvmArgs"),
    ENV_CODE((short)12, "envCode"),
    HOST((short)13, "host"),
    NAME((short)14, "name"),
    AGENT_VERSION((short)15, "agentVersion"),
    TENANT_APP_KEY((short)16, "tenantAppKey"),
    SERVICE_NAME((short)17, "serviceName"),
    MD5((short)18, "md5"),
    STATUS((short)19, "status"),
    MODULE_LOAD_RESULT((short)20, "moduleLoadResult"),
    ERROR_CODE((short)21, "errorCode"),
    ERROR_MSG((short)22, "errorMsg"),
    PORT((short)23, "port");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // AGENT_ID
          return AGENT_ID;
        case 2: // SIMULATOR_VERSION
          return SIMULATOR_VERSION;
        case 3: // ADDRESS
          return ADDRESS;
        case 4: // APP_NAME
          return APP_NAME;
        case 5: // PID
          return PID;
        case 6: // AGENT_LANGUAGE
          return AGENT_LANGUAGE;
        case 7: // USER_ID
          return USER_ID;
        case 8: // AGENT_STATUS
          return AGENT_STATUS;
        case 9: // JVM_ARGS_CHECK
          return JVM_ARGS_CHECK;
        case 10: // JDK
          return JDK;
        case 11: // JVM_ARGS
          return JVM_ARGS;
        case 12: // ENV_CODE
          return ENV_CODE;
        case 13: // HOST
          return HOST;
        case 14: // NAME
          return NAME;
        case 15: // AGENT_VERSION
          return AGENT_VERSION;
        case 16: // TENANT_APP_KEY
          return TENANT_APP_KEY;
        case 17: // SERVICE_NAME
          return SERVICE_NAME;
        case 18: // MD5
          return MD5;
        case 19: // STATUS
          return STATUS;
        case 20: // MODULE_LOAD_RESULT
          return MODULE_LOAD_RESULT;
        case 21: // ERROR_CODE
          return ERROR_CODE;
        case 22: // ERROR_MSG
          return ERROR_MSG;
        case 23: // PORT
          return PORT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PID_ISSET_ID = 0;
  private static final int __USERID_ISSET_ID = 1;
  private static final int __STATUS_ISSET_ID = 2;
  private static final int __MODULELOADRESULT_ISSET_ID = 3;
  private static final int __PORT_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.SIMULATOR_VERSION,_Fields.ADDRESS,_Fields.PID,_Fields.AGENT_LANGUAGE,_Fields.AGENT_STATUS,_Fields.JVM_ARGS_CHECK,_Fields.JDK,_Fields.JVM_ARGS,_Fields.HOST,_Fields.NAME,_Fields.AGENT_VERSION,_Fields.SERVICE_NAME,_Fields.MD5,_Fields.ERROR_CODE,_Fields.ERROR_MSG,_Fields.PORT};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.AGENT_ID, new org.apache.thrift.meta_data.FieldMetaData("agentId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SIMULATOR_VERSION, new org.apache.thrift.meta_data.FieldMetaData("simulatorVersion", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APP_NAME, new org.apache.thrift.meta_data.FieldMetaData("appName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PID, new org.apache.thrift.meta_data.FieldMetaData("pid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AGENT_LANGUAGE, new org.apache.thrift.meta_data.FieldMetaData("agentLanguage", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.AGENT_STATUS, new org.apache.thrift.meta_data.FieldMetaData("agentStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JVM_ARGS_CHECK, new org.apache.thrift.meta_data.FieldMetaData("jvmArgsCheck", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JDK, new org.apache.thrift.meta_data.FieldMetaData("jdk", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JVM_ARGS, new org.apache.thrift.meta_data.FieldMetaData("jvmArgs", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ENV_CODE, new org.apache.thrift.meta_data.FieldMetaData("envCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HOST, new org.apache.thrift.meta_data.FieldMetaData("host", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AGENT_VERSION, new org.apache.thrift.meta_data.FieldMetaData("agentVersion", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TENANT_APP_KEY, new org.apache.thrift.meta_data.FieldMetaData("tenantAppKey", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SERVICE_NAME, new org.apache.thrift.meta_data.FieldMetaData("serviceName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MD5, new org.apache.thrift.meta_data.FieldMetaData("md5", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.MODULE_LOAD_RESULT, new org.apache.thrift.meta_data.FieldMetaData("moduleLoadResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.ERROR_CODE, new org.apache.thrift.meta_data.FieldMetaData("errorCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ERROR_MSG, new org.apache.thrift.meta_data.FieldMetaData("errorMsg", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PORT, new org.apache.thrift.meta_data.FieldMetaData("port", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TStressTestAgentHeartbeatData.class, metaDataMap);
  }

  public TStressTestAgentHeartbeatData() {
  }

  public TStressTestAgentHeartbeatData(
    java.lang.String agentId,
    java.lang.String appName,
    long userId,
    java.lang.String envCode,
    java.lang.String tenantAppKey,
    boolean status,
    boolean moduleLoadResult)
  {
    this();
    this.agentId = agentId;
    this.appName = appName;
    this.userId = userId;
    setUserIdIsSet(true);
    this.envCode = envCode;
    this.tenantAppKey = tenantAppKey;
    this.status = status;
    setStatusIsSet(true);
    this.moduleLoadResult = moduleLoadResult;
    setModuleLoadResultIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TStressTestAgentHeartbeatData(TStressTestAgentHeartbeatData other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetAgentId()) {
      this.agentId = other.agentId;
    }
    if (other.isSetSimulatorVersion()) {
      this.simulatorVersion = other.simulatorVersion;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    if (other.isSetAppName()) {
      this.appName = other.appName;
    }
    this.pid = other.pid;
    if (other.isSetAgentLanguage()) {
      this.agentLanguage = other.agentLanguage;
    }
    this.userId = other.userId;
    if (other.isSetAgentStatus()) {
      this.agentStatus = other.agentStatus;
    }
    if (other.isSetJvmArgsCheck()) {
      this.jvmArgsCheck = other.jvmArgsCheck;
    }
    if (other.isSetJdk()) {
      this.jdk = other.jdk;
    }
    if (other.isSetJvmArgs()) {
      this.jvmArgs = other.jvmArgs;
    }
    if (other.isSetEnvCode()) {
      this.envCode = other.envCode;
    }
    if (other.isSetHost()) {
      this.host = other.host;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetAgentVersion()) {
      this.agentVersion = other.agentVersion;
    }
    if (other.isSetTenantAppKey()) {
      this.tenantAppKey = other.tenantAppKey;
    }
    if (other.isSetServiceName()) {
      this.serviceName = other.serviceName;
    }
    if (other.isSetMd5()) {
      this.md5 = other.md5;
    }
    this.status = other.status;
    this.moduleLoadResult = other.moduleLoadResult;
    if (other.isSetErrorCode()) {
      this.errorCode = other.errorCode;
    }
    if (other.isSetErrorMsg()) {
      this.errorMsg = other.errorMsg;
    }
    this.port = other.port;
  }

  public TStressTestAgentHeartbeatData deepCopy() {
    return new TStressTestAgentHeartbeatData(this);
  }

  @Override
  public void clear() {
    this.agentId = null;
    this.simulatorVersion = null;
    this.address = null;
    this.appName = null;
    setPidIsSet(false);
    this.pid = 0;
    this.agentLanguage = null;
    setUserIdIsSet(false);
    this.userId = 0;
    this.agentStatus = null;
    this.jvmArgsCheck = null;
    this.jdk = null;
    this.jvmArgs = null;
    this.envCode = null;
    this.host = null;
    this.name = null;
    this.agentVersion = null;
    this.tenantAppKey = null;
    this.serviceName = null;
    this.md5 = null;
    setStatusIsSet(false);
    this.status = false;
    setModuleLoadResultIsSet(false);
    this.moduleLoadResult = false;
    this.errorCode = null;
    this.errorMsg = null;
    setPortIsSet(false);
    this.port = 0;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAgentId() {
    return this.agentId;
  }

  public void setAgentId(@org.apache.thrift.annotation.Nullable java.lang.String agentId) {
    this.agentId = agentId;
  }

  public void unsetAgentId() {
    this.agentId = null;
  }

  /** Returns true if field agentId is set (has been assigned a value) and false otherwise */
  public boolean isSetAgentId() {
    return this.agentId != null;
  }

  public void setAgentIdIsSet(boolean value) {
    if (!value) {
      this.agentId = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getSimulatorVersion() {
    return this.simulatorVersion;
  }

  public void setSimulatorVersion(@org.apache.thrift.annotation.Nullable java.lang.String simulatorVersion) {
    this.simulatorVersion = simulatorVersion;
  }

  public void unsetSimulatorVersion() {
    this.simulatorVersion = null;
  }

  /** Returns true if field simulatorVersion is set (has been assigned a value) and false otherwise */
  public boolean isSetSimulatorVersion() {
    return this.simulatorVersion != null;
  }

  public void setSimulatorVersionIsSet(boolean value) {
    if (!value) {
      this.simulatorVersion = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAddress() {
    return this.address;
  }

  public void setAddress(@org.apache.thrift.annotation.Nullable java.lang.String address) {
    this.address = address;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAppName() {
    return this.appName;
  }

  public void setAppName(@org.apache.thrift.annotation.Nullable java.lang.String appName) {
    this.appName = appName;
  }

  public void unsetAppName() {
    this.appName = null;
  }

  /** Returns true if field appName is set (has been assigned a value) and false otherwise */
  public boolean isSetAppName() {
    return this.appName != null;
  }

  public void setAppNameIsSet(boolean value) {
    if (!value) {
      this.appName = null;
    }
  }

  public int getPid() {
    return this.pid;
  }

  public void setPid(int pid) {
    this.pid = pid;
    setPidIsSet(true);
  }

  public void unsetPid() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PID_ISSET_ID);
  }

  /** Returns true if field pid is set (has been assigned a value) and false otherwise */
  public boolean isSetPid() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PID_ISSET_ID);
  }

  public void setPidIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAgentLanguage() {
    return this.agentLanguage;
  }

  public void setAgentLanguage(@org.apache.thrift.annotation.Nullable java.lang.String agentLanguage) {
    this.agentLanguage = agentLanguage;
  }

  public void unsetAgentLanguage() {
    this.agentLanguage = null;
  }

  /** Returns true if field agentLanguage is set (has been assigned a value) and false otherwise */
  public boolean isSetAgentLanguage() {
    return this.agentLanguage != null;
  }

  public void setAgentLanguageIsSet(boolean value) {
    if (!value) {
      this.agentLanguage = null;
    }
  }

  public long getUserId() {
    return this.userId;
  }

  public void setUserId(long userId) {
    this.userId = userId;
    setUserIdIsSet(true);
  }

  public void unsetUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAgentStatus() {
    return this.agentStatus;
  }

  public void setAgentStatus(@org.apache.thrift.annotation.Nullable java.lang.String agentStatus) {
    this.agentStatus = agentStatus;
  }

  public void unsetAgentStatus() {
    this.agentStatus = null;
  }

  /** Returns true if field agentStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetAgentStatus() {
    return this.agentStatus != null;
  }

  public void setAgentStatusIsSet(boolean value) {
    if (!value) {
      this.agentStatus = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getJvmArgsCheck() {
    return this.jvmArgsCheck;
  }

  public void setJvmArgsCheck(@org.apache.thrift.annotation.Nullable java.lang.String jvmArgsCheck) {
    this.jvmArgsCheck = jvmArgsCheck;
  }

  public void unsetJvmArgsCheck() {
    this.jvmArgsCheck = null;
  }

  /** Returns true if field jvmArgsCheck is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmArgsCheck() {
    return this.jvmArgsCheck != null;
  }

  public void setJvmArgsCheckIsSet(boolean value) {
    if (!value) {
      this.jvmArgsCheck = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getJdk() {
    return this.jdk;
  }

  public void setJdk(@org.apache.thrift.annotation.Nullable java.lang.String jdk) {
    this.jdk = jdk;
  }

  public void unsetJdk() {
    this.jdk = null;
  }

  /** Returns true if field jdk is set (has been assigned a value) and false otherwise */
  public boolean isSetJdk() {
    return this.jdk != null;
  }

  public void setJdkIsSet(boolean value) {
    if (!value) {
      this.jdk = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getJvmArgs() {
    return this.jvmArgs;
  }

  public void setJvmArgs(@org.apache.thrift.annotation.Nullable java.lang.String jvmArgs) {
    this.jvmArgs = jvmArgs;
  }

  public void unsetJvmArgs() {
    this.jvmArgs = null;
  }

  /** Returns true if field jvmArgs is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmArgs() {
    return this.jvmArgs != null;
  }

  public void setJvmArgsIsSet(boolean value) {
    if (!value) {
      this.jvmArgs = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getEnvCode() {
    return this.envCode;
  }

  public void setEnvCode(@org.apache.thrift.annotation.Nullable java.lang.String envCode) {
    this.envCode = envCode;
  }

  public void unsetEnvCode() {
    this.envCode = null;
  }

  /** Returns true if field envCode is set (has been assigned a value) and false otherwise */
  public boolean isSetEnvCode() {
    return this.envCode != null;
  }

  public void setEnvCodeIsSet(boolean value) {
    if (!value) {
      this.envCode = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getHost() {
    return this.host;
  }

  public void setHost(@org.apache.thrift.annotation.Nullable java.lang.String host) {
    this.host = host;
  }

  public void unsetHost() {
    this.host = null;
  }

  /** Returns true if field host is set (has been assigned a value) and false otherwise */
  public boolean isSetHost() {
    return this.host != null;
  }

  public void setHostIsSet(boolean value) {
    if (!value) {
      this.host = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getName() {
    return this.name;
  }

  public void setName(@org.apache.thrift.annotation.Nullable java.lang.String name) {
    this.name = name;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAgentVersion() {
    return this.agentVersion;
  }

  public void setAgentVersion(@org.apache.thrift.annotation.Nullable java.lang.String agentVersion) {
    this.agentVersion = agentVersion;
  }

  public void unsetAgentVersion() {
    this.agentVersion = null;
  }

  /** Returns true if field agentVersion is set (has been assigned a value) and false otherwise */
  public boolean isSetAgentVersion() {
    return this.agentVersion != null;
  }

  public void setAgentVersionIsSet(boolean value) {
    if (!value) {
      this.agentVersion = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getTenantAppKey() {
    return this.tenantAppKey;
  }

  public void setTenantAppKey(@org.apache.thrift.annotation.Nullable java.lang.String tenantAppKey) {
    this.tenantAppKey = tenantAppKey;
  }

  public void unsetTenantAppKey() {
    this.tenantAppKey = null;
  }

  /** Returns true if field tenantAppKey is set (has been assigned a value) and false otherwise */
  public boolean isSetTenantAppKey() {
    return this.tenantAppKey != null;
  }

  public void setTenantAppKeyIsSet(boolean value) {
    if (!value) {
      this.tenantAppKey = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getServiceName() {
    return this.serviceName;
  }

  public void setServiceName(@org.apache.thrift.annotation.Nullable java.lang.String serviceName) {
    this.serviceName = serviceName;
  }

  public void unsetServiceName() {
    this.serviceName = null;
  }

  /** Returns true if field serviceName is set (has been assigned a value) and false otherwise */
  public boolean isSetServiceName() {
    return this.serviceName != null;
  }

  public void setServiceNameIsSet(boolean value) {
    if (!value) {
      this.serviceName = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getMd5() {
    return this.md5;
  }

  public void setMd5(@org.apache.thrift.annotation.Nullable java.lang.String md5) {
    this.md5 = md5;
  }

  public void unsetMd5() {
    this.md5 = null;
  }

  /** Returns true if field md5 is set (has been assigned a value) and false otherwise */
  public boolean isSetMd5() {
    return this.md5 != null;
  }

  public void setMd5IsSet(boolean value) {
    if (!value) {
      this.md5 = null;
    }
  }

  public boolean isStatus() {
    return this.status;
  }

  public void setStatus(boolean status) {
    this.status = status;
    setStatusIsSet(true);
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public boolean isModuleLoadResult() {
    return this.moduleLoadResult;
  }

  public void setModuleLoadResult(boolean moduleLoadResult) {
    this.moduleLoadResult = moduleLoadResult;
    setModuleLoadResultIsSet(true);
  }

  public void unsetModuleLoadResult() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MODULELOADRESULT_ISSET_ID);
  }

  /** Returns true if field moduleLoadResult is set (has been assigned a value) and false otherwise */
  public boolean isSetModuleLoadResult() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MODULELOADRESULT_ISSET_ID);
  }

  public void setModuleLoadResultIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MODULELOADRESULT_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getErrorCode() {
    return this.errorCode;
  }

  public void setErrorCode(@org.apache.thrift.annotation.Nullable java.lang.String errorCode) {
    this.errorCode = errorCode;
  }

  public void unsetErrorCode() {
    this.errorCode = null;
  }

  /** Returns true if field errorCode is set (has been assigned a value) and false otherwise */
  public boolean isSetErrorCode() {
    return this.errorCode != null;
  }

  public void setErrorCodeIsSet(boolean value) {
    if (!value) {
      this.errorCode = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getErrorMsg() {
    return this.errorMsg;
  }

  public void setErrorMsg(@org.apache.thrift.annotation.Nullable java.lang.String errorMsg) {
    this.errorMsg = errorMsg;
  }

  public void unsetErrorMsg() {
    this.errorMsg = null;
  }

  /** Returns true if field errorMsg is set (has been assigned a value) and false otherwise */
  public boolean isSetErrorMsg() {
    return this.errorMsg != null;
  }

  public void setErrorMsgIsSet(boolean value) {
    if (!value) {
      this.errorMsg = null;
    }
  }

  public int getPort() {
    return this.port;
  }

  public void setPort(int port) {
    this.port = port;
    setPortIsSet(true);
  }

  public void unsetPort() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PORT_ISSET_ID);
  }

  /** Returns true if field port is set (has been assigned a value) and false otherwise */
  public boolean isSetPort() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PORT_ISSET_ID);
  }

  public void setPortIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PORT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case AGENT_ID:
      if (value == null) {
        unsetAgentId();
      } else {
        setAgentId((java.lang.String)value);
      }
      break;

    case SIMULATOR_VERSION:
      if (value == null) {
        unsetSimulatorVersion();
      } else {
        setSimulatorVersion((java.lang.String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((java.lang.String)value);
      }
      break;

    case APP_NAME:
      if (value == null) {
        unsetAppName();
      } else {
        setAppName((java.lang.String)value);
      }
      break;

    case PID:
      if (value == null) {
        unsetPid();
      } else {
        setPid((java.lang.Integer)value);
      }
      break;

    case AGENT_LANGUAGE:
      if (value == null) {
        unsetAgentLanguage();
      } else {
        setAgentLanguage((java.lang.String)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((java.lang.Long)value);
      }
      break;

    case AGENT_STATUS:
      if (value == null) {
        unsetAgentStatus();
      } else {
        setAgentStatus((java.lang.String)value);
      }
      break;

    case JVM_ARGS_CHECK:
      if (value == null) {
        unsetJvmArgsCheck();
      } else {
        setJvmArgsCheck((java.lang.String)value);
      }
      break;

    case JDK:
      if (value == null) {
        unsetJdk();
      } else {
        setJdk((java.lang.String)value);
      }
      break;

    case JVM_ARGS:
      if (value == null) {
        unsetJvmArgs();
      } else {
        setJvmArgs((java.lang.String)value);
      }
      break;

    case ENV_CODE:
      if (value == null) {
        unsetEnvCode();
      } else {
        setEnvCode((java.lang.String)value);
      }
      break;

    case HOST:
      if (value == null) {
        unsetHost();
      } else {
        setHost((java.lang.String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case AGENT_VERSION:
      if (value == null) {
        unsetAgentVersion();
      } else {
        setAgentVersion((java.lang.String)value);
      }
      break;

    case TENANT_APP_KEY:
      if (value == null) {
        unsetTenantAppKey();
      } else {
        setTenantAppKey((java.lang.String)value);
      }
      break;

    case SERVICE_NAME:
      if (value == null) {
        unsetServiceName();
      } else {
        setServiceName((java.lang.String)value);
      }
      break;

    case MD5:
      if (value == null) {
        unsetMd5();
      } else {
        setMd5((java.lang.String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((java.lang.Boolean)value);
      }
      break;

    case MODULE_LOAD_RESULT:
      if (value == null) {
        unsetModuleLoadResult();
      } else {
        setModuleLoadResult((java.lang.Boolean)value);
      }
      break;

    case ERROR_CODE:
      if (value == null) {
        unsetErrorCode();
      } else {
        setErrorCode((java.lang.String)value);
      }
      break;

    case ERROR_MSG:
      if (value == null) {
        unsetErrorMsg();
      } else {
        setErrorMsg((java.lang.String)value);
      }
      break;

    case PORT:
      if (value == null) {
        unsetPort();
      } else {
        setPort((java.lang.Integer)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case AGENT_ID:
      return getAgentId();

    case SIMULATOR_VERSION:
      return getSimulatorVersion();

    case ADDRESS:
      return getAddress();

    case APP_NAME:
      return getAppName();

    case PID:
      return getPid();

    case AGENT_LANGUAGE:
      return getAgentLanguage();

    case USER_ID:
      return getUserId();

    case AGENT_STATUS:
      return getAgentStatus();

    case JVM_ARGS_CHECK:
      return getJvmArgsCheck();

    case JDK:
      return getJdk();

    case JVM_ARGS:
      return getJvmArgs();

    case ENV_CODE:
      return getEnvCode();

    case HOST:
      return getHost();

    case NAME:
      return getName();

    case AGENT_VERSION:
      return getAgentVersion();

    case TENANT_APP_KEY:
      return getTenantAppKey();

    case SERVICE_NAME:
      return getServiceName();

    case MD5:
      return getMd5();

    case STATUS:
      return isStatus();

    case MODULE_LOAD_RESULT:
      return isModuleLoadResult();

    case ERROR_CODE:
      return getErrorCode();

    case ERROR_MSG:
      return getErrorMsg();

    case PORT:
      return getPort();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case AGENT_ID:
      return isSetAgentId();
    case SIMULATOR_VERSION:
      return isSetSimulatorVersion();
    case ADDRESS:
      return isSetAddress();
    case APP_NAME:
      return isSetAppName();
    case PID:
      return isSetPid();
    case AGENT_LANGUAGE:
      return isSetAgentLanguage();
    case USER_ID:
      return isSetUserId();
    case AGENT_STATUS:
      return isSetAgentStatus();
    case JVM_ARGS_CHECK:
      return isSetJvmArgsCheck();
    case JDK:
      return isSetJdk();
    case JVM_ARGS:
      return isSetJvmArgs();
    case ENV_CODE:
      return isSetEnvCode();
    case HOST:
      return isSetHost();
    case NAME:
      return isSetName();
    case AGENT_VERSION:
      return isSetAgentVersion();
    case TENANT_APP_KEY:
      return isSetTenantAppKey();
    case SERVICE_NAME:
      return isSetServiceName();
    case MD5:
      return isSetMd5();
    case STATUS:
      return isSetStatus();
    case MODULE_LOAD_RESULT:
      return isSetModuleLoadResult();
    case ERROR_CODE:
      return isSetErrorCode();
    case ERROR_MSG:
      return isSetErrorMsg();
    case PORT:
      return isSetPort();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TStressTestAgentHeartbeatData)
      return this.equals((TStressTestAgentHeartbeatData)that);
    return false;
  }

  public boolean equals(TStressTestAgentHeartbeatData that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_agentId = true && this.isSetAgentId();
    boolean that_present_agentId = true && that.isSetAgentId();
    if (this_present_agentId || that_present_agentId) {
      if (!(this_present_agentId && that_present_agentId))
        return false;
      if (!this.agentId.equals(that.agentId))
        return false;
    }

    boolean this_present_simulatorVersion = true && this.isSetSimulatorVersion();
    boolean that_present_simulatorVersion = true && that.isSetSimulatorVersion();
    if (this_present_simulatorVersion || that_present_simulatorVersion) {
      if (!(this_present_simulatorVersion && that_present_simulatorVersion))
        return false;
      if (!this.simulatorVersion.equals(that.simulatorVersion))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_appName = true && this.isSetAppName();
    boolean that_present_appName = true && that.isSetAppName();
    if (this_present_appName || that_present_appName) {
      if (!(this_present_appName && that_present_appName))
        return false;
      if (!this.appName.equals(that.appName))
        return false;
    }

    boolean this_present_pid = true && this.isSetPid();
    boolean that_present_pid = true && that.isSetPid();
    if (this_present_pid || that_present_pid) {
      if (!(this_present_pid && that_present_pid))
        return false;
      if (this.pid != that.pid)
        return false;
    }

    boolean this_present_agentLanguage = true && this.isSetAgentLanguage();
    boolean that_present_agentLanguage = true && that.isSetAgentLanguage();
    if (this_present_agentLanguage || that_present_agentLanguage) {
      if (!(this_present_agentLanguage && that_present_agentLanguage))
        return false;
      if (!this.agentLanguage.equals(that.agentLanguage))
        return false;
    }

    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_agentStatus = true && this.isSetAgentStatus();
    boolean that_present_agentStatus = true && that.isSetAgentStatus();
    if (this_present_agentStatus || that_present_agentStatus) {
      if (!(this_present_agentStatus && that_present_agentStatus))
        return false;
      if (!this.agentStatus.equals(that.agentStatus))
        return false;
    }

    boolean this_present_jvmArgsCheck = true && this.isSetJvmArgsCheck();
    boolean that_present_jvmArgsCheck = true && that.isSetJvmArgsCheck();
    if (this_present_jvmArgsCheck || that_present_jvmArgsCheck) {
      if (!(this_present_jvmArgsCheck && that_present_jvmArgsCheck))
        return false;
      if (!this.jvmArgsCheck.equals(that.jvmArgsCheck))
        return false;
    }

    boolean this_present_jdk = true && this.isSetJdk();
    boolean that_present_jdk = true && that.isSetJdk();
    if (this_present_jdk || that_present_jdk) {
      if (!(this_present_jdk && that_present_jdk))
        return false;
      if (!this.jdk.equals(that.jdk))
        return false;
    }

    boolean this_present_jvmArgs = true && this.isSetJvmArgs();
    boolean that_present_jvmArgs = true && that.isSetJvmArgs();
    if (this_present_jvmArgs || that_present_jvmArgs) {
      if (!(this_present_jvmArgs && that_present_jvmArgs))
        return false;
      if (!this.jvmArgs.equals(that.jvmArgs))
        return false;
    }

    boolean this_present_envCode = true && this.isSetEnvCode();
    boolean that_present_envCode = true && that.isSetEnvCode();
    if (this_present_envCode || that_present_envCode) {
      if (!(this_present_envCode && that_present_envCode))
        return false;
      if (!this.envCode.equals(that.envCode))
        return false;
    }

    boolean this_present_host = true && this.isSetHost();
    boolean that_present_host = true && that.isSetHost();
    if (this_present_host || that_present_host) {
      if (!(this_present_host && that_present_host))
        return false;
      if (!this.host.equals(that.host))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_agentVersion = true && this.isSetAgentVersion();
    boolean that_present_agentVersion = true && that.isSetAgentVersion();
    if (this_present_agentVersion || that_present_agentVersion) {
      if (!(this_present_agentVersion && that_present_agentVersion))
        return false;
      if (!this.agentVersion.equals(that.agentVersion))
        return false;
    }

    boolean this_present_tenantAppKey = true && this.isSetTenantAppKey();
    boolean that_present_tenantAppKey = true && that.isSetTenantAppKey();
    if (this_present_tenantAppKey || that_present_tenantAppKey) {
      if (!(this_present_tenantAppKey && that_present_tenantAppKey))
        return false;
      if (!this.tenantAppKey.equals(that.tenantAppKey))
        return false;
    }

    boolean this_present_serviceName = true && this.isSetServiceName();
    boolean that_present_serviceName = true && that.isSetServiceName();
    if (this_present_serviceName || that_present_serviceName) {
      if (!(this_present_serviceName && that_present_serviceName))
        return false;
      if (!this.serviceName.equals(that.serviceName))
        return false;
    }

    boolean this_present_md5 = true && this.isSetMd5();
    boolean that_present_md5 = true && that.isSetMd5();
    if (this_present_md5 || that_present_md5) {
      if (!(this_present_md5 && that_present_md5))
        return false;
      if (!this.md5.equals(that.md5))
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    boolean this_present_moduleLoadResult = true;
    boolean that_present_moduleLoadResult = true;
    if (this_present_moduleLoadResult || that_present_moduleLoadResult) {
      if (!(this_present_moduleLoadResult && that_present_moduleLoadResult))
        return false;
      if (this.moduleLoadResult != that.moduleLoadResult)
        return false;
    }

    boolean this_present_errorCode = true && this.isSetErrorCode();
    boolean that_present_errorCode = true && that.isSetErrorCode();
    if (this_present_errorCode || that_present_errorCode) {
      if (!(this_present_errorCode && that_present_errorCode))
        return false;
      if (!this.errorCode.equals(that.errorCode))
        return false;
    }

    boolean this_present_errorMsg = true && this.isSetErrorMsg();
    boolean that_present_errorMsg = true && that.isSetErrorMsg();
    if (this_present_errorMsg || that_present_errorMsg) {
      if (!(this_present_errorMsg && that_present_errorMsg))
        return false;
      if (!this.errorMsg.equals(that.errorMsg))
        return false;
    }

    boolean this_present_port = true && this.isSetPort();
    boolean that_present_port = true && that.isSetPort();
    if (this_present_port || that_present_port) {
      if (!(this_present_port && that_present_port))
        return false;
      if (this.port != that.port)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetAgentId()) ? 131071 : 524287);
    if (isSetAgentId())
      hashCode = hashCode * 8191 + agentId.hashCode();

    hashCode = hashCode * 8191 + ((isSetSimulatorVersion()) ? 131071 : 524287);
    if (isSetSimulatorVersion())
      hashCode = hashCode * 8191 + simulatorVersion.hashCode();

    hashCode = hashCode * 8191 + ((isSetAddress()) ? 131071 : 524287);
    if (isSetAddress())
      hashCode = hashCode * 8191 + address.hashCode();

    hashCode = hashCode * 8191 + ((isSetAppName()) ? 131071 : 524287);
    if (isSetAppName())
      hashCode = hashCode * 8191 + appName.hashCode();

    hashCode = hashCode * 8191 + ((isSetPid()) ? 131071 : 524287);
    if (isSetPid())
      hashCode = hashCode * 8191 + pid;

    hashCode = hashCode * 8191 + ((isSetAgentLanguage()) ? 131071 : 524287);
    if (isSetAgentLanguage())
      hashCode = hashCode * 8191 + agentLanguage.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(userId);

    hashCode = hashCode * 8191 + ((isSetAgentStatus()) ? 131071 : 524287);
    if (isSetAgentStatus())
      hashCode = hashCode * 8191 + agentStatus.hashCode();

    hashCode = hashCode * 8191 + ((isSetJvmArgsCheck()) ? 131071 : 524287);
    if (isSetJvmArgsCheck())
      hashCode = hashCode * 8191 + jvmArgsCheck.hashCode();

    hashCode = hashCode * 8191 + ((isSetJdk()) ? 131071 : 524287);
    if (isSetJdk())
      hashCode = hashCode * 8191 + jdk.hashCode();

    hashCode = hashCode * 8191 + ((isSetJvmArgs()) ? 131071 : 524287);
    if (isSetJvmArgs())
      hashCode = hashCode * 8191 + jvmArgs.hashCode();

    hashCode = hashCode * 8191 + ((isSetEnvCode()) ? 131071 : 524287);
    if (isSetEnvCode())
      hashCode = hashCode * 8191 + envCode.hashCode();

    hashCode = hashCode * 8191 + ((isSetHost()) ? 131071 : 524287);
    if (isSetHost())
      hashCode = hashCode * 8191 + host.hashCode();

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetAgentVersion()) ? 131071 : 524287);
    if (isSetAgentVersion())
      hashCode = hashCode * 8191 + agentVersion.hashCode();

    hashCode = hashCode * 8191 + ((isSetTenantAppKey()) ? 131071 : 524287);
    if (isSetTenantAppKey())
      hashCode = hashCode * 8191 + tenantAppKey.hashCode();

    hashCode = hashCode * 8191 + ((isSetServiceName()) ? 131071 : 524287);
    if (isSetServiceName())
      hashCode = hashCode * 8191 + serviceName.hashCode();

    hashCode = hashCode * 8191 + ((isSetMd5()) ? 131071 : 524287);
    if (isSetMd5())
      hashCode = hashCode * 8191 + md5.hashCode();

    hashCode = hashCode * 8191 + ((status) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((moduleLoadResult) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetErrorCode()) ? 131071 : 524287);
    if (isSetErrorCode())
      hashCode = hashCode * 8191 + errorCode.hashCode();

    hashCode = hashCode * 8191 + ((isSetErrorMsg()) ? 131071 : 524287);
    if (isSetErrorMsg())
      hashCode = hashCode * 8191 + errorMsg.hashCode();

    hashCode = hashCode * 8191 + ((isSetPort()) ? 131071 : 524287);
    if (isSetPort())
      hashCode = hashCode * 8191 + port;

    return hashCode;
  }

  @Override
  public int compareTo(TStressTestAgentHeartbeatData other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetAgentId()).compareTo(other.isSetAgentId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgentId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agentId, other.agentId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSimulatorVersion()).compareTo(other.isSetSimulatorVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSimulatorVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.simulatorVersion, other.simulatorVersion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAppName()).compareTo(other.isSetAppName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appName, other.appName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPid()).compareTo(other.isSetPid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pid, other.pid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAgentLanguage()).compareTo(other.isSetAgentLanguage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgentLanguage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agentLanguage, other.agentLanguage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAgentStatus()).compareTo(other.isSetAgentStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgentStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agentStatus, other.agentStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetJvmArgsCheck()).compareTo(other.isSetJvmArgsCheck());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmArgsCheck()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmArgsCheck, other.jvmArgsCheck);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetJdk()).compareTo(other.isSetJdk());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJdk()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jdk, other.jdk);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetJvmArgs()).compareTo(other.isSetJvmArgs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmArgs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmArgs, other.jvmArgs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEnvCode()).compareTo(other.isSetEnvCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnvCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.envCode, other.envCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHost()).compareTo(other.isSetHost());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHost()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.host, other.host);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAgentVersion()).compareTo(other.isSetAgentVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgentVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agentVersion, other.agentVersion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTenantAppKey()).compareTo(other.isSetTenantAppKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTenantAppKey()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tenantAppKey, other.tenantAppKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetServiceName()).compareTo(other.isSetServiceName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetServiceName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.serviceName, other.serviceName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMd5()).compareTo(other.isSetMd5());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMd5()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.md5, other.md5);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetModuleLoadResult()).compareTo(other.isSetModuleLoadResult());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModuleLoadResult()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.moduleLoadResult, other.moduleLoadResult);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetErrorCode()).compareTo(other.isSetErrorCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetErrorCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.errorCode, other.errorCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetErrorMsg()).compareTo(other.isSetErrorMsg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetErrorMsg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.errorMsg, other.errorMsg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPort()).compareTo(other.isSetPort());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPort()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.port, other.port);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TStressTestAgentHeartbeatData(");
    boolean first = true;

    sb.append("agentId:");
    if (this.agentId == null) {
      sb.append("null");
    } else {
      sb.append(this.agentId);
    }
    first = false;
    if (isSetSimulatorVersion()) {
      if (!first) sb.append(", ");
      sb.append("simulatorVersion:");
      if (this.simulatorVersion == null) {
        sb.append("null");
      } else {
        sb.append(this.simulatorVersion);
      }
      first = false;
    }
    if (isSetAddress()) {
      if (!first) sb.append(", ");
      sb.append("address:");
      if (this.address == null) {
        sb.append("null");
      } else {
        sb.append(this.address);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("appName:");
    if (this.appName == null) {
      sb.append("null");
    } else {
      sb.append(this.appName);
    }
    first = false;
    if (isSetPid()) {
      if (!first) sb.append(", ");
      sb.append("pid:");
      sb.append(this.pid);
      first = false;
    }
    if (isSetAgentLanguage()) {
      if (!first) sb.append(", ");
      sb.append("agentLanguage:");
      if (this.agentLanguage == null) {
        sb.append("null");
      } else {
        sb.append(this.agentLanguage);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (isSetAgentStatus()) {
      if (!first) sb.append(", ");
      sb.append("agentStatus:");
      if (this.agentStatus == null) {
        sb.append("null");
      } else {
        sb.append(this.agentStatus);
      }
      first = false;
    }
    if (isSetJvmArgsCheck()) {
      if (!first) sb.append(", ");
      sb.append("jvmArgsCheck:");
      if (this.jvmArgsCheck == null) {
        sb.append("null");
      } else {
        sb.append(this.jvmArgsCheck);
      }
      first = false;
    }
    if (isSetJdk()) {
      if (!first) sb.append(", ");
      sb.append("jdk:");
      if (this.jdk == null) {
        sb.append("null");
      } else {
        sb.append(this.jdk);
      }
      first = false;
    }
    if (isSetJvmArgs()) {
      if (!first) sb.append(", ");
      sb.append("jvmArgs:");
      if (this.jvmArgs == null) {
        sb.append("null");
      } else {
        sb.append(this.jvmArgs);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("envCode:");
    if (this.envCode == null) {
      sb.append("null");
    } else {
      sb.append(this.envCode);
    }
    first = false;
    if (isSetHost()) {
      if (!first) sb.append(", ");
      sb.append("host:");
      if (this.host == null) {
        sb.append("null");
      } else {
        sb.append(this.host);
      }
      first = false;
    }
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    if (isSetAgentVersion()) {
      if (!first) sb.append(", ");
      sb.append("agentVersion:");
      if (this.agentVersion == null) {
        sb.append("null");
      } else {
        sb.append(this.agentVersion);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("tenantAppKey:");
    if (this.tenantAppKey == null) {
      sb.append("null");
    } else {
      sb.append(this.tenantAppKey);
    }
    first = false;
    if (isSetServiceName()) {
      if (!first) sb.append(", ");
      sb.append("serviceName:");
      if (this.serviceName == null) {
        sb.append("null");
      } else {
        sb.append(this.serviceName);
      }
      first = false;
    }
    if (isSetMd5()) {
      if (!first) sb.append(", ");
      sb.append("md5:");
      if (this.md5 == null) {
        sb.append("null");
      } else {
        sb.append(this.md5);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    if (!first) sb.append(", ");
    sb.append("moduleLoadResult:");
    sb.append(this.moduleLoadResult);
    first = false;
    if (isSetErrorCode()) {
      if (!first) sb.append(", ");
      sb.append("errorCode:");
      if (this.errorCode == null) {
        sb.append("null");
      } else {
        sb.append(this.errorCode);
      }
      first = false;
    }
    if (isSetErrorMsg()) {
      if (!first) sb.append(", ");
      sb.append("errorMsg:");
      if (this.errorMsg == null) {
        sb.append("null");
      } else {
        sb.append(this.errorMsg);
      }
      first = false;
    }
    if (isSetPort()) {
      if (!first) sb.append(", ");
      sb.append("port:");
      sb.append(this.port);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TStressTestAgentHeartbeatDataStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TStressTestAgentHeartbeatDataStandardScheme getScheme() {
      return new TStressTestAgentHeartbeatDataStandardScheme();
    }
  }

  private static class TStressTestAgentHeartbeatDataStandardScheme extends org.apache.thrift.scheme.StandardScheme<TStressTestAgentHeartbeatData> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TStressTestAgentHeartbeatData struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // AGENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.agentId = iprot.readString();
              struct.setAgentIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SIMULATOR_VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.simulatorVersion = iprot.readString();
              struct.setSimulatorVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // APP_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appName = iprot.readString();
              struct.setAppNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pid = iprot.readI32();
              struct.setPidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // AGENT_LANGUAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.agentLanguage = iprot.readString();
              struct.setAgentLanguageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.userId = iprot.readI64();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // AGENT_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.agentStatus = iprot.readString();
              struct.setAgentStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // JVM_ARGS_CHECK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.jvmArgsCheck = iprot.readString();
              struct.setJvmArgsCheckIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // JDK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.jdk = iprot.readString();
              struct.setJdkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // JVM_ARGS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.jvmArgs = iprot.readString();
              struct.setJvmArgsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ENV_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.envCode = iprot.readString();
              struct.setEnvCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // HOST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.host = iprot.readString();
              struct.setHostIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // AGENT_VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.agentVersion = iprot.readString();
              struct.setAgentVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // TENANT_APP_KEY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.tenantAppKey = iprot.readString();
              struct.setTenantAppKeyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // SERVICE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.serviceName = iprot.readString();
              struct.setServiceNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // MD5
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.md5 = iprot.readString();
              struct.setMd5IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.status = iprot.readBool();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // MODULE_LOAD_RESULT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.moduleLoadResult = iprot.readBool();
              struct.setModuleLoadResultIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // ERROR_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.errorCode = iprot.readString();
              struct.setErrorCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // ERROR_MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.errorMsg = iprot.readString();
              struct.setErrorMsgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // PORT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.port = iprot.readI32();
              struct.setPortIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TStressTestAgentHeartbeatData struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.agentId != null) {
        oprot.writeFieldBegin(AGENT_ID_FIELD_DESC);
        oprot.writeString(struct.agentId);
        oprot.writeFieldEnd();
      }
      if (struct.simulatorVersion != null) {
        if (struct.isSetSimulatorVersion()) {
          oprot.writeFieldBegin(SIMULATOR_VERSION_FIELD_DESC);
          oprot.writeString(struct.simulatorVersion);
          oprot.writeFieldEnd();
        }
      }
      if (struct.address != null) {
        if (struct.isSetAddress()) {
          oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
          oprot.writeString(struct.address);
          oprot.writeFieldEnd();
        }
      }
      if (struct.appName != null) {
        oprot.writeFieldBegin(APP_NAME_FIELD_DESC);
        oprot.writeString(struct.appName);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPid()) {
        oprot.writeFieldBegin(PID_FIELD_DESC);
        oprot.writeI32(struct.pid);
        oprot.writeFieldEnd();
      }
      if (struct.agentLanguage != null) {
        if (struct.isSetAgentLanguage()) {
          oprot.writeFieldBegin(AGENT_LANGUAGE_FIELD_DESC);
          oprot.writeString(struct.agentLanguage);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeI64(struct.userId);
      oprot.writeFieldEnd();
      if (struct.agentStatus != null) {
        if (struct.isSetAgentStatus()) {
          oprot.writeFieldBegin(AGENT_STATUS_FIELD_DESC);
          oprot.writeString(struct.agentStatus);
          oprot.writeFieldEnd();
        }
      }
      if (struct.jvmArgsCheck != null) {
        if (struct.isSetJvmArgsCheck()) {
          oprot.writeFieldBegin(JVM_ARGS_CHECK_FIELD_DESC);
          oprot.writeString(struct.jvmArgsCheck);
          oprot.writeFieldEnd();
        }
      }
      if (struct.jdk != null) {
        if (struct.isSetJdk()) {
          oprot.writeFieldBegin(JDK_FIELD_DESC);
          oprot.writeString(struct.jdk);
          oprot.writeFieldEnd();
        }
      }
      if (struct.jvmArgs != null) {
        if (struct.isSetJvmArgs()) {
          oprot.writeFieldBegin(JVM_ARGS_FIELD_DESC);
          oprot.writeString(struct.jvmArgs);
          oprot.writeFieldEnd();
        }
      }
      if (struct.envCode != null) {
        oprot.writeFieldBegin(ENV_CODE_FIELD_DESC);
        oprot.writeString(struct.envCode);
        oprot.writeFieldEnd();
      }
      if (struct.host != null) {
        if (struct.isSetHost()) {
          oprot.writeFieldBegin(HOST_FIELD_DESC);
          oprot.writeString(struct.host);
          oprot.writeFieldEnd();
        }
      }
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.agentVersion != null) {
        if (struct.isSetAgentVersion()) {
          oprot.writeFieldBegin(AGENT_VERSION_FIELD_DESC);
          oprot.writeString(struct.agentVersion);
          oprot.writeFieldEnd();
        }
      }
      if (struct.tenantAppKey != null) {
        oprot.writeFieldBegin(TENANT_APP_KEY_FIELD_DESC);
        oprot.writeString(struct.tenantAppKey);
        oprot.writeFieldEnd();
      }
      if (struct.serviceName != null) {
        if (struct.isSetServiceName()) {
          oprot.writeFieldBegin(SERVICE_NAME_FIELD_DESC);
          oprot.writeString(struct.serviceName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.md5 != null) {
        if (struct.isSetMd5()) {
          oprot.writeFieldBegin(MD5_FIELD_DESC);
          oprot.writeString(struct.md5);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeBool(struct.status);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MODULE_LOAD_RESULT_FIELD_DESC);
      oprot.writeBool(struct.moduleLoadResult);
      oprot.writeFieldEnd();
      if (struct.errorCode != null) {
        if (struct.isSetErrorCode()) {
          oprot.writeFieldBegin(ERROR_CODE_FIELD_DESC);
          oprot.writeString(struct.errorCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.errorMsg != null) {
        if (struct.isSetErrorMsg()) {
          oprot.writeFieldBegin(ERROR_MSG_FIELD_DESC);
          oprot.writeString(struct.errorMsg);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPort()) {
        oprot.writeFieldBegin(PORT_FIELD_DESC);
        oprot.writeI32(struct.port);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TStressTestAgentHeartbeatDataTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TStressTestAgentHeartbeatDataTupleScheme getScheme() {
      return new TStressTestAgentHeartbeatDataTupleScheme();
    }
  }

  private static class TStressTestAgentHeartbeatDataTupleScheme extends org.apache.thrift.scheme.TupleScheme<TStressTestAgentHeartbeatData> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TStressTestAgentHeartbeatData struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetAgentId()) {
        optionals.set(0);
      }
      if (struct.isSetSimulatorVersion()) {
        optionals.set(1);
      }
      if (struct.isSetAddress()) {
        optionals.set(2);
      }
      if (struct.isSetAppName()) {
        optionals.set(3);
      }
      if (struct.isSetPid()) {
        optionals.set(4);
      }
      if (struct.isSetAgentLanguage()) {
        optionals.set(5);
      }
      if (struct.isSetUserId()) {
        optionals.set(6);
      }
      if (struct.isSetAgentStatus()) {
        optionals.set(7);
      }
      if (struct.isSetJvmArgsCheck()) {
        optionals.set(8);
      }
      if (struct.isSetJdk()) {
        optionals.set(9);
      }
      if (struct.isSetJvmArgs()) {
        optionals.set(10);
      }
      if (struct.isSetEnvCode()) {
        optionals.set(11);
      }
      if (struct.isSetHost()) {
        optionals.set(12);
      }
      if (struct.isSetName()) {
        optionals.set(13);
      }
      if (struct.isSetAgentVersion()) {
        optionals.set(14);
      }
      if (struct.isSetTenantAppKey()) {
        optionals.set(15);
      }
      if (struct.isSetServiceName()) {
        optionals.set(16);
      }
      if (struct.isSetMd5()) {
        optionals.set(17);
      }
      if (struct.isSetStatus()) {
        optionals.set(18);
      }
      if (struct.isSetModuleLoadResult()) {
        optionals.set(19);
      }
      if (struct.isSetErrorCode()) {
        optionals.set(20);
      }
      if (struct.isSetErrorMsg()) {
        optionals.set(21);
      }
      if (struct.isSetPort()) {
        optionals.set(22);
      }
      oprot.writeBitSet(optionals, 23);
      if (struct.isSetAgentId()) {
        oprot.writeString(struct.agentId);
      }
      if (struct.isSetSimulatorVersion()) {
        oprot.writeString(struct.simulatorVersion);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetAppName()) {
        oprot.writeString(struct.appName);
      }
      if (struct.isSetPid()) {
        oprot.writeI32(struct.pid);
      }
      if (struct.isSetAgentLanguage()) {
        oprot.writeString(struct.agentLanguage);
      }
      if (struct.isSetUserId()) {
        oprot.writeI64(struct.userId);
      }
      if (struct.isSetAgentStatus()) {
        oprot.writeString(struct.agentStatus);
      }
      if (struct.isSetJvmArgsCheck()) {
        oprot.writeString(struct.jvmArgsCheck);
      }
      if (struct.isSetJdk()) {
        oprot.writeString(struct.jdk);
      }
      if (struct.isSetJvmArgs()) {
        oprot.writeString(struct.jvmArgs);
      }
      if (struct.isSetEnvCode()) {
        oprot.writeString(struct.envCode);
      }
      if (struct.isSetHost()) {
        oprot.writeString(struct.host);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetAgentVersion()) {
        oprot.writeString(struct.agentVersion);
      }
      if (struct.isSetTenantAppKey()) {
        oprot.writeString(struct.tenantAppKey);
      }
      if (struct.isSetServiceName()) {
        oprot.writeString(struct.serviceName);
      }
      if (struct.isSetMd5()) {
        oprot.writeString(struct.md5);
      }
      if (struct.isSetStatus()) {
        oprot.writeBool(struct.status);
      }
      if (struct.isSetModuleLoadResult()) {
        oprot.writeBool(struct.moduleLoadResult);
      }
      if (struct.isSetErrorCode()) {
        oprot.writeString(struct.errorCode);
      }
      if (struct.isSetErrorMsg()) {
        oprot.writeString(struct.errorMsg);
      }
      if (struct.isSetPort()) {
        oprot.writeI32(struct.port);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TStressTestAgentHeartbeatData struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(23);
      if (incoming.get(0)) {
        struct.agentId = iprot.readString();
        struct.setAgentIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.simulatorVersion = iprot.readString();
        struct.setSimulatorVersionIsSet(true);
      }
      if (incoming.get(2)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(3)) {
        struct.appName = iprot.readString();
        struct.setAppNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.pid = iprot.readI32();
        struct.setPidIsSet(true);
      }
      if (incoming.get(5)) {
        struct.agentLanguage = iprot.readString();
        struct.setAgentLanguageIsSet(true);
      }
      if (incoming.get(6)) {
        struct.userId = iprot.readI64();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.agentStatus = iprot.readString();
        struct.setAgentStatusIsSet(true);
      }
      if (incoming.get(8)) {
        struct.jvmArgsCheck = iprot.readString();
        struct.setJvmArgsCheckIsSet(true);
      }
      if (incoming.get(9)) {
        struct.jdk = iprot.readString();
        struct.setJdkIsSet(true);
      }
      if (incoming.get(10)) {
        struct.jvmArgs = iprot.readString();
        struct.setJvmArgsIsSet(true);
      }
      if (incoming.get(11)) {
        struct.envCode = iprot.readString();
        struct.setEnvCodeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.host = iprot.readString();
        struct.setHostIsSet(true);
      }
      if (incoming.get(13)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(14)) {
        struct.agentVersion = iprot.readString();
        struct.setAgentVersionIsSet(true);
      }
      if (incoming.get(15)) {
        struct.tenantAppKey = iprot.readString();
        struct.setTenantAppKeyIsSet(true);
      }
      if (incoming.get(16)) {
        struct.serviceName = iprot.readString();
        struct.setServiceNameIsSet(true);
      }
      if (incoming.get(17)) {
        struct.md5 = iprot.readString();
        struct.setMd5IsSet(true);
      }
      if (incoming.get(18)) {
        struct.status = iprot.readBool();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(19)) {
        struct.moduleLoadResult = iprot.readBool();
        struct.setModuleLoadResultIsSet(true);
      }
      if (incoming.get(20)) {
        struct.errorCode = iprot.readString();
        struct.setErrorCodeIsSet(true);
      }
      if (incoming.get(21)) {
        struct.errorMsg = iprot.readString();
        struct.setErrorMsgIsSet(true);
      }
      if (incoming.get(22)) {
        struct.port = iprot.readI32();
        struct.setPortIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

