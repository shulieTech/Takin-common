/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package io.shulie.takin.pinpoint.thrift.dto;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2023-06-15")
public class TStressTestAgentData implements org.apache.thrift.TBase<TStressTestAgentData, TStressTestAgentData._Fields>, java.io.Serializable, Cloneable, Comparable<TStressTestAgentData> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TStressTestAgentData");

  private static final org.apache.thrift.protocol.TField DATA_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("dataType", org.apache.thrift.protocol.TType.BYTE, (short)1);
  private static final org.apache.thrift.protocol.TField STRING_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("stringValue", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField HOST_IP_FIELD_DESC = new org.apache.thrift.protocol.TField("hostIp", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("version", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CHARSET_FIELD_DESC = new org.apache.thrift.protocol.TField("charset", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField USER_APP_KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("userAppKey", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField TENANT_APP_KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("tenantAppKey", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField ENV_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("envCode", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField AGENT_EXPAND_FIELD_DESC = new org.apache.thrift.protocol.TField("agentExpand", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TStressTestAgentDataStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TStressTestAgentDataTupleSchemeFactory();

  private byte dataType; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String stringValue; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String hostIp; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String version; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String charset; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String userAppKey; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String tenantAppKey; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String userId; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String envCode; // required
  private @org.apache.thrift.annotation.Nullable java.lang.String agentExpand; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    DATA_TYPE((short)1, "dataType"),
    STRING_VALUE((short)2, "stringValue"),
    HOST_IP((short)3, "hostIp"),
    VERSION((short)4, "version"),
    CHARSET((short)5, "charset"),
    USER_APP_KEY((short)6, "userAppKey"),
    TENANT_APP_KEY((short)7, "tenantAppKey"),
    USER_ID((short)8, "userId"),
    ENV_CODE((short)9, "envCode"),
    AGENT_EXPAND((short)10, "agentExpand");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DATA_TYPE
          return DATA_TYPE;
        case 2: // STRING_VALUE
          return STRING_VALUE;
        case 3: // HOST_IP
          return HOST_IP;
        case 4: // VERSION
          return VERSION;
        case 5: // CHARSET
          return CHARSET;
        case 6: // USER_APP_KEY
          return USER_APP_KEY;
        case 7: // TENANT_APP_KEY
          return TENANT_APP_KEY;
        case 8: // USER_ID
          return USER_ID;
        case 9: // ENV_CODE
          return ENV_CODE;
        case 10: // AGENT_EXPAND
          return AGENT_EXPAND;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DATATYPE_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DATA_TYPE, new org.apache.thrift.meta_data.FieldMetaData("dataType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.STRING_VALUE, new org.apache.thrift.meta_data.FieldMetaData("stringValue", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HOST_IP, new org.apache.thrift.meta_data.FieldMetaData("hostIp", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VERSION, new org.apache.thrift.meta_data.FieldMetaData("version", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHARSET, new org.apache.thrift.meta_data.FieldMetaData("charset", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_APP_KEY, new org.apache.thrift.meta_data.FieldMetaData("userAppKey", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TENANT_APP_KEY, new org.apache.thrift.meta_data.FieldMetaData("tenantAppKey", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ENV_CODE, new org.apache.thrift.meta_data.FieldMetaData("envCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AGENT_EXPAND, new org.apache.thrift.meta_data.FieldMetaData("agentExpand", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TStressTestAgentData.class, metaDataMap);
  }

  public TStressTestAgentData() {
  }

  public TStressTestAgentData(
    byte dataType,
    java.lang.String stringValue,
    java.lang.String hostIp,
    java.lang.String version,
    java.lang.String charset,
    java.lang.String userAppKey,
    java.lang.String tenantAppKey,
    java.lang.String userId,
    java.lang.String envCode,
    java.lang.String agentExpand)
  {
    this();
    this.dataType = dataType;
    setDataTypeIsSet(true);
    this.stringValue = stringValue;
    this.hostIp = hostIp;
    this.version = version;
    this.charset = charset;
    this.userAppKey = userAppKey;
    this.tenantAppKey = tenantAppKey;
    this.userId = userId;
    this.envCode = envCode;
    this.agentExpand = agentExpand;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TStressTestAgentData(TStressTestAgentData other) {
    __isset_bitfield = other.__isset_bitfield;
    this.dataType = other.dataType;
    if (other.isSetStringValue()) {
      this.stringValue = other.stringValue;
    }
    if (other.isSetHostIp()) {
      this.hostIp = other.hostIp;
    }
    if (other.isSetVersion()) {
      this.version = other.version;
    }
    if (other.isSetCharset()) {
      this.charset = other.charset;
    }
    if (other.isSetUserAppKey()) {
      this.userAppKey = other.userAppKey;
    }
    if (other.isSetTenantAppKey()) {
      this.tenantAppKey = other.tenantAppKey;
    }
    if (other.isSetUserId()) {
      this.userId = other.userId;
    }
    if (other.isSetEnvCode()) {
      this.envCode = other.envCode;
    }
    if (other.isSetAgentExpand()) {
      this.agentExpand = other.agentExpand;
    }
  }

  public TStressTestAgentData deepCopy() {
    return new TStressTestAgentData(this);
  }

  @Override
  public void clear() {
    setDataTypeIsSet(false);
    this.dataType = 0;
    this.stringValue = null;
    this.hostIp = null;
    this.version = null;
    this.charset = null;
    this.userAppKey = null;
    this.tenantAppKey = null;
    this.userId = null;
    this.envCode = null;
    this.agentExpand = null;
  }

  public byte getDataType() {
    return this.dataType;
  }

  public void setDataType(byte dataType) {
    this.dataType = dataType;
    setDataTypeIsSet(true);
  }

  public void unsetDataType() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DATATYPE_ISSET_ID);
  }

  /** Returns true if field dataType is set (has been assigned a value) and false otherwise */
  public boolean isSetDataType() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DATATYPE_ISSET_ID);
  }

  public void setDataTypeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DATATYPE_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getStringValue() {
    return this.stringValue;
  }

  public void setStringValue(@org.apache.thrift.annotation.Nullable java.lang.String stringValue) {
    this.stringValue = stringValue;
  }

  public void unsetStringValue() {
    this.stringValue = null;
  }

  /** Returns true if field stringValue is set (has been assigned a value) and false otherwise */
  public boolean isSetStringValue() {
    return this.stringValue != null;
  }

  public void setStringValueIsSet(boolean value) {
    if (!value) {
      this.stringValue = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getHostIp() {
    return this.hostIp;
  }

  public void setHostIp(@org.apache.thrift.annotation.Nullable java.lang.String hostIp) {
    this.hostIp = hostIp;
  }

  public void unsetHostIp() {
    this.hostIp = null;
  }

  /** Returns true if field hostIp is set (has been assigned a value) and false otherwise */
  public boolean isSetHostIp() {
    return this.hostIp != null;
  }

  public void setHostIpIsSet(boolean value) {
    if (!value) {
      this.hostIp = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getVersion() {
    return this.version;
  }

  public void setVersion(@org.apache.thrift.annotation.Nullable java.lang.String version) {
    this.version = version;
  }

  public void unsetVersion() {
    this.version = null;
  }

  /** Returns true if field version is set (has been assigned a value) and false otherwise */
  public boolean isSetVersion() {
    return this.version != null;
  }

  public void setVersionIsSet(boolean value) {
    if (!value) {
      this.version = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getCharset() {
    return this.charset;
  }

  public void setCharset(@org.apache.thrift.annotation.Nullable java.lang.String charset) {
    this.charset = charset;
  }

  public void unsetCharset() {
    this.charset = null;
  }

  /** Returns true if field charset is set (has been assigned a value) and false otherwise */
  public boolean isSetCharset() {
    return this.charset != null;
  }

  public void setCharsetIsSet(boolean value) {
    if (!value) {
      this.charset = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getUserAppKey() {
    return this.userAppKey;
  }

  public void setUserAppKey(@org.apache.thrift.annotation.Nullable java.lang.String userAppKey) {
    this.userAppKey = userAppKey;
  }

  public void unsetUserAppKey() {
    this.userAppKey = null;
  }

  /** Returns true if field userAppKey is set (has been assigned a value) and false otherwise */
  public boolean isSetUserAppKey() {
    return this.userAppKey != null;
  }

  public void setUserAppKeyIsSet(boolean value) {
    if (!value) {
      this.userAppKey = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getTenantAppKey() {
    return this.tenantAppKey;
  }

  public void setTenantAppKey(@org.apache.thrift.annotation.Nullable java.lang.String tenantAppKey) {
    this.tenantAppKey = tenantAppKey;
  }

  public void unsetTenantAppKey() {
    this.tenantAppKey = null;
  }

  /** Returns true if field tenantAppKey is set (has been assigned a value) and false otherwise */
  public boolean isSetTenantAppKey() {
    return this.tenantAppKey != null;
  }

  public void setTenantAppKeyIsSet(boolean value) {
    if (!value) {
      this.tenantAppKey = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getUserId() {
    return this.userId;
  }

  public void setUserId(@org.apache.thrift.annotation.Nullable java.lang.String userId) {
    this.userId = userId;
  }

  public void unsetUserId() {
    this.userId = null;
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return this.userId != null;
  }

  public void setUserIdIsSet(boolean value) {
    if (!value) {
      this.userId = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getEnvCode() {
    return this.envCode;
  }

  public void setEnvCode(@org.apache.thrift.annotation.Nullable java.lang.String envCode) {
    this.envCode = envCode;
  }

  public void unsetEnvCode() {
    this.envCode = null;
  }

  /** Returns true if field envCode is set (has been assigned a value) and false otherwise */
  public boolean isSetEnvCode() {
    return this.envCode != null;
  }

  public void setEnvCodeIsSet(boolean value) {
    if (!value) {
      this.envCode = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAgentExpand() {
    return this.agentExpand;
  }

  public void setAgentExpand(@org.apache.thrift.annotation.Nullable java.lang.String agentExpand) {
    this.agentExpand = agentExpand;
  }

  public void unsetAgentExpand() {
    this.agentExpand = null;
  }

  /** Returns true if field agentExpand is set (has been assigned a value) and false otherwise */
  public boolean isSetAgentExpand() {
    return this.agentExpand != null;
  }

  public void setAgentExpandIsSet(boolean value) {
    if (!value) {
      this.agentExpand = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case DATA_TYPE:
      if (value == null) {
        unsetDataType();
      } else {
        setDataType((java.lang.Byte)value);
      }
      break;

    case STRING_VALUE:
      if (value == null) {
        unsetStringValue();
      } else {
        setStringValue((java.lang.String)value);
      }
      break;

    case HOST_IP:
      if (value == null) {
        unsetHostIp();
      } else {
        setHostIp((java.lang.String)value);
      }
      break;

    case VERSION:
      if (value == null) {
        unsetVersion();
      } else {
        setVersion((java.lang.String)value);
      }
      break;

    case CHARSET:
      if (value == null) {
        unsetCharset();
      } else {
        setCharset((java.lang.String)value);
      }
      break;

    case USER_APP_KEY:
      if (value == null) {
        unsetUserAppKey();
      } else {
        setUserAppKey((java.lang.String)value);
      }
      break;

    case TENANT_APP_KEY:
      if (value == null) {
        unsetTenantAppKey();
      } else {
        setTenantAppKey((java.lang.String)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((java.lang.String)value);
      }
      break;

    case ENV_CODE:
      if (value == null) {
        unsetEnvCode();
      } else {
        setEnvCode((java.lang.String)value);
      }
      break;

    case AGENT_EXPAND:
      if (value == null) {
        unsetAgentExpand();
      } else {
        setAgentExpand((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case DATA_TYPE:
      return getDataType();

    case STRING_VALUE:
      return getStringValue();

    case HOST_IP:
      return getHostIp();

    case VERSION:
      return getVersion();

    case CHARSET:
      return getCharset();

    case USER_APP_KEY:
      return getUserAppKey();

    case TENANT_APP_KEY:
      return getTenantAppKey();

    case USER_ID:
      return getUserId();

    case ENV_CODE:
      return getEnvCode();

    case AGENT_EXPAND:
      return getAgentExpand();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case DATA_TYPE:
      return isSetDataType();
    case STRING_VALUE:
      return isSetStringValue();
    case HOST_IP:
      return isSetHostIp();
    case VERSION:
      return isSetVersion();
    case CHARSET:
      return isSetCharset();
    case USER_APP_KEY:
      return isSetUserAppKey();
    case TENANT_APP_KEY:
      return isSetTenantAppKey();
    case USER_ID:
      return isSetUserId();
    case ENV_CODE:
      return isSetEnvCode();
    case AGENT_EXPAND:
      return isSetAgentExpand();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TStressTestAgentData)
      return this.equals((TStressTestAgentData)that);
    return false;
  }

  public boolean equals(TStressTestAgentData that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_dataType = true;
    boolean that_present_dataType = true;
    if (this_present_dataType || that_present_dataType) {
      if (!(this_present_dataType && that_present_dataType))
        return false;
      if (this.dataType != that.dataType)
        return false;
    }

    boolean this_present_stringValue = true && this.isSetStringValue();
    boolean that_present_stringValue = true && that.isSetStringValue();
    if (this_present_stringValue || that_present_stringValue) {
      if (!(this_present_stringValue && that_present_stringValue))
        return false;
      if (!this.stringValue.equals(that.stringValue))
        return false;
    }

    boolean this_present_hostIp = true && this.isSetHostIp();
    boolean that_present_hostIp = true && that.isSetHostIp();
    if (this_present_hostIp || that_present_hostIp) {
      if (!(this_present_hostIp && that_present_hostIp))
        return false;
      if (!this.hostIp.equals(that.hostIp))
        return false;
    }

    boolean this_present_version = true && this.isSetVersion();
    boolean that_present_version = true && that.isSetVersion();
    if (this_present_version || that_present_version) {
      if (!(this_present_version && that_present_version))
        return false;
      if (!this.version.equals(that.version))
        return false;
    }

    boolean this_present_charset = true && this.isSetCharset();
    boolean that_present_charset = true && that.isSetCharset();
    if (this_present_charset || that_present_charset) {
      if (!(this_present_charset && that_present_charset))
        return false;
      if (!this.charset.equals(that.charset))
        return false;
    }

    boolean this_present_userAppKey = true && this.isSetUserAppKey();
    boolean that_present_userAppKey = true && that.isSetUserAppKey();
    if (this_present_userAppKey || that_present_userAppKey) {
      if (!(this_present_userAppKey && that_present_userAppKey))
        return false;
      if (!this.userAppKey.equals(that.userAppKey))
        return false;
    }

    boolean this_present_tenantAppKey = true && this.isSetTenantAppKey();
    boolean that_present_tenantAppKey = true && that.isSetTenantAppKey();
    if (this_present_tenantAppKey || that_present_tenantAppKey) {
      if (!(this_present_tenantAppKey && that_present_tenantAppKey))
        return false;
      if (!this.tenantAppKey.equals(that.tenantAppKey))
        return false;
    }

    boolean this_present_userId = true && this.isSetUserId();
    boolean that_present_userId = true && that.isSetUserId();
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (!this.userId.equals(that.userId))
        return false;
    }

    boolean this_present_envCode = true && this.isSetEnvCode();
    boolean that_present_envCode = true && that.isSetEnvCode();
    if (this_present_envCode || that_present_envCode) {
      if (!(this_present_envCode && that_present_envCode))
        return false;
      if (!this.envCode.equals(that.envCode))
        return false;
    }

    boolean this_present_agentExpand = true && this.isSetAgentExpand();
    boolean that_present_agentExpand = true && that.isSetAgentExpand();
    if (this_present_agentExpand || that_present_agentExpand) {
      if (!(this_present_agentExpand && that_present_agentExpand))
        return false;
      if (!this.agentExpand.equals(that.agentExpand))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + (int) (dataType);

    hashCode = hashCode * 8191 + ((isSetStringValue()) ? 131071 : 524287);
    if (isSetStringValue())
      hashCode = hashCode * 8191 + stringValue.hashCode();

    hashCode = hashCode * 8191 + ((isSetHostIp()) ? 131071 : 524287);
    if (isSetHostIp())
      hashCode = hashCode * 8191 + hostIp.hashCode();

    hashCode = hashCode * 8191 + ((isSetVersion()) ? 131071 : 524287);
    if (isSetVersion())
      hashCode = hashCode * 8191 + version.hashCode();

    hashCode = hashCode * 8191 + ((isSetCharset()) ? 131071 : 524287);
    if (isSetCharset())
      hashCode = hashCode * 8191 + charset.hashCode();

    hashCode = hashCode * 8191 + ((isSetUserAppKey()) ? 131071 : 524287);
    if (isSetUserAppKey())
      hashCode = hashCode * 8191 + userAppKey.hashCode();

    hashCode = hashCode * 8191 + ((isSetTenantAppKey()) ? 131071 : 524287);
    if (isSetTenantAppKey())
      hashCode = hashCode * 8191 + tenantAppKey.hashCode();

    hashCode = hashCode * 8191 + ((isSetUserId()) ? 131071 : 524287);
    if (isSetUserId())
      hashCode = hashCode * 8191 + userId.hashCode();

    hashCode = hashCode * 8191 + ((isSetEnvCode()) ? 131071 : 524287);
    if (isSetEnvCode())
      hashCode = hashCode * 8191 + envCode.hashCode();

    hashCode = hashCode * 8191 + ((isSetAgentExpand()) ? 131071 : 524287);
    if (isSetAgentExpand())
      hashCode = hashCode * 8191 + agentExpand.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TStressTestAgentData other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetDataType()).compareTo(other.isSetDataType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataType, other.dataType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStringValue()).compareTo(other.isSetStringValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStringValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stringValue, other.stringValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHostIp()).compareTo(other.isSetHostIp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHostIp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hostIp, other.hostIp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetVersion()).compareTo(other.isSetVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.version, other.version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCharset()).compareTo(other.isSetCharset());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCharset()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.charset, other.charset);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUserAppKey()).compareTo(other.isSetUserAppKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserAppKey()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userAppKey, other.userAppKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTenantAppKey()).compareTo(other.isSetTenantAppKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTenantAppKey()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tenantAppKey, other.tenantAppKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEnvCode()).compareTo(other.isSetEnvCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnvCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.envCode, other.envCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAgentExpand()).compareTo(other.isSetAgentExpand());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgentExpand()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.agentExpand, other.agentExpand);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TStressTestAgentData(");
    boolean first = true;

    sb.append("dataType:");
    sb.append(this.dataType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("stringValue:");
    if (this.stringValue == null) {
      sb.append("null");
    } else {
      sb.append(this.stringValue);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("hostIp:");
    if (this.hostIp == null) {
      sb.append("null");
    } else {
      sb.append(this.hostIp);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("version:");
    if (this.version == null) {
      sb.append("null");
    } else {
      sb.append(this.version);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("charset:");
    if (this.charset == null) {
      sb.append("null");
    } else {
      sb.append(this.charset);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userAppKey:");
    if (this.userAppKey == null) {
      sb.append("null");
    } else {
      sb.append(this.userAppKey);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("tenantAppKey:");
    if (this.tenantAppKey == null) {
      sb.append("null");
    } else {
      sb.append(this.tenantAppKey);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    if (this.userId == null) {
      sb.append("null");
    } else {
      sb.append(this.userId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("envCode:");
    if (this.envCode == null) {
      sb.append("null");
    } else {
      sb.append(this.envCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("agentExpand:");
    if (this.agentExpand == null) {
      sb.append("null");
    } else {
      sb.append(this.agentExpand);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TStressTestAgentDataStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TStressTestAgentDataStandardScheme getScheme() {
      return new TStressTestAgentDataStandardScheme();
    }
  }

  private static class TStressTestAgentDataStandardScheme extends org.apache.thrift.scheme.StandardScheme<TStressTestAgentData> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TStressTestAgentData struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DATA_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.dataType = iprot.readByte();
              struct.setDataTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STRING_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.stringValue = iprot.readString();
              struct.setStringValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // HOST_IP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.hostIp = iprot.readString();
              struct.setHostIpIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.version = iprot.readString();
              struct.setVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CHARSET
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.charset = iprot.readString();
              struct.setCharsetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // USER_APP_KEY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userAppKey = iprot.readString();
              struct.setUserAppKeyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // TENANT_APP_KEY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.tenantAppKey = iprot.readString();
              struct.setTenantAppKeyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userId = iprot.readString();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ENV_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.envCode = iprot.readString();
              struct.setEnvCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // AGENT_EXPAND
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.agentExpand = iprot.readString();
              struct.setAgentExpandIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TStressTestAgentData struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(DATA_TYPE_FIELD_DESC);
      oprot.writeByte(struct.dataType);
      oprot.writeFieldEnd();
      if (struct.stringValue != null) {
        oprot.writeFieldBegin(STRING_VALUE_FIELD_DESC);
        oprot.writeString(struct.stringValue);
        oprot.writeFieldEnd();
      }
      if (struct.hostIp != null) {
        oprot.writeFieldBegin(HOST_IP_FIELD_DESC);
        oprot.writeString(struct.hostIp);
        oprot.writeFieldEnd();
      }
      if (struct.version != null) {
        oprot.writeFieldBegin(VERSION_FIELD_DESC);
        oprot.writeString(struct.version);
        oprot.writeFieldEnd();
      }
      if (struct.charset != null) {
        oprot.writeFieldBegin(CHARSET_FIELD_DESC);
        oprot.writeString(struct.charset);
        oprot.writeFieldEnd();
      }
      if (struct.userAppKey != null) {
        oprot.writeFieldBegin(USER_APP_KEY_FIELD_DESC);
        oprot.writeString(struct.userAppKey);
        oprot.writeFieldEnd();
      }
      if (struct.tenantAppKey != null) {
        oprot.writeFieldBegin(TENANT_APP_KEY_FIELD_DESC);
        oprot.writeString(struct.tenantAppKey);
        oprot.writeFieldEnd();
      }
      if (struct.userId != null) {
        oprot.writeFieldBegin(USER_ID_FIELD_DESC);
        oprot.writeString(struct.userId);
        oprot.writeFieldEnd();
      }
      if (struct.envCode != null) {
        oprot.writeFieldBegin(ENV_CODE_FIELD_DESC);
        oprot.writeString(struct.envCode);
        oprot.writeFieldEnd();
      }
      if (struct.agentExpand != null) {
        oprot.writeFieldBegin(AGENT_EXPAND_FIELD_DESC);
        oprot.writeString(struct.agentExpand);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TStressTestAgentDataTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TStressTestAgentDataTupleScheme getScheme() {
      return new TStressTestAgentDataTupleScheme();
    }
  }

  private static class TStressTestAgentDataTupleScheme extends org.apache.thrift.scheme.TupleScheme<TStressTestAgentData> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TStressTestAgentData struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetDataType()) {
        optionals.set(0);
      }
      if (struct.isSetStringValue()) {
        optionals.set(1);
      }
      if (struct.isSetHostIp()) {
        optionals.set(2);
      }
      if (struct.isSetVersion()) {
        optionals.set(3);
      }
      if (struct.isSetCharset()) {
        optionals.set(4);
      }
      if (struct.isSetUserAppKey()) {
        optionals.set(5);
      }
      if (struct.isSetTenantAppKey()) {
        optionals.set(6);
      }
      if (struct.isSetUserId()) {
        optionals.set(7);
      }
      if (struct.isSetEnvCode()) {
        optionals.set(8);
      }
      if (struct.isSetAgentExpand()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetDataType()) {
        oprot.writeByte(struct.dataType);
      }
      if (struct.isSetStringValue()) {
        oprot.writeString(struct.stringValue);
      }
      if (struct.isSetHostIp()) {
        oprot.writeString(struct.hostIp);
      }
      if (struct.isSetVersion()) {
        oprot.writeString(struct.version);
      }
      if (struct.isSetCharset()) {
        oprot.writeString(struct.charset);
      }
      if (struct.isSetUserAppKey()) {
        oprot.writeString(struct.userAppKey);
      }
      if (struct.isSetTenantAppKey()) {
        oprot.writeString(struct.tenantAppKey);
      }
      if (struct.isSetUserId()) {
        oprot.writeString(struct.userId);
      }
      if (struct.isSetEnvCode()) {
        oprot.writeString(struct.envCode);
      }
      if (struct.isSetAgentExpand()) {
        oprot.writeString(struct.agentExpand);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TStressTestAgentData struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.dataType = iprot.readByte();
        struct.setDataTypeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.stringValue = iprot.readString();
        struct.setStringValueIsSet(true);
      }
      if (incoming.get(2)) {
        struct.hostIp = iprot.readString();
        struct.setHostIpIsSet(true);
      }
      if (incoming.get(3)) {
        struct.version = iprot.readString();
        struct.setVersionIsSet(true);
      }
      if (incoming.get(4)) {
        struct.charset = iprot.readString();
        struct.setCharsetIsSet(true);
      }
      if (incoming.get(5)) {
        struct.userAppKey = iprot.readString();
        struct.setUserAppKeyIsSet(true);
      }
      if (incoming.get(6)) {
        struct.tenantAppKey = iprot.readString();
        struct.setTenantAppKeyIsSet(true);
      }
      if (incoming.get(7)) {
        struct.userId = iprot.readString();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(8)) {
        struct.envCode = iprot.readString();
        struct.setEnvCodeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.agentExpand = iprot.readString();
        struct.setAgentExpandIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

